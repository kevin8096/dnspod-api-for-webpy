import web
import os
from mongoengine import connection
from config.settings import urls
from web import utils
from include.dnspod import dnspod

web.config.debug = False

r = web.template.render(os.path.join(os.path.dirname(__file__), 'templates/'))
siteName = 'dnsapi'
header = r.header(siteName)

db = web.database(dbn='mysql',db='test',user='root',pw='')


class hello:
    def __init__(self):
        self.render = web.template.render(os.path.join(os.path.dirname(__file__), 'templates/'))
        
    def GET(self):
        p = web.input(name='kevin',age=26)
	return self.render.index(p.name,p.age)

class hi:
    def __init__(self):
        self.render = web.template.render(os.path.join(os.path.dirname(__file__),'templates/'))
   

    def GET(self):
        i = web.input(name='kevin')
	return self.render.add(i.name)

class show:
    def GET(self):
        rows = db.select('NewTable')
        return r.show(rows) 

class add:
    def POST(self):
        i = web.input(name='kevin',hp=18611029562,desc='d')
        if not i.name:
            return " can not empty!!"
	else:
	    db.insert('NewTable', name=i.name, hp=i.hp ,p_desc=i.desc )
	raise web.seeother('/show')


class index:
    def __init__(self):
        self.render = web.template.render(os.path.join(os.path.dirname(__file__),'templates/'))
    def GET(self):
        add = 'add'
        return self.render.add(add)


class login:
    def GET(self):
        a='a'
        return r.login(a,header)
    def POST(self):
        i = web.input(email='kevin8096@live.com',pwd='2720003')
        if not i.email:
            return 'please check your email'
        if not i.pwd:
            return 'please check your password'
        else:
            email = i.email
            pwd = i.pwd
            session.login = True
            return web.seeother('/list')


class list:
    def GET(self):
        if session.get('login',False):
            return 'aa'








app = web.application(urls, globals())
curdir = os.path.dirname(__file__)
session = web.session.Session(app, web.session.DiskStore(curdir + '/' + 'sessions'),)
application = app.wsgifunc()
